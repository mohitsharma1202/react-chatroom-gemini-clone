{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\gemini-clone\\\\src\\\\components\\\\ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useChatStore } from '../store/useChatStore';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  chatroomId,\n  onBack\n}) => {\n  _s();\n  var _messages$chatroomId;\n  const {\n    messages,\n    addMessage\n  } = useChatStore();\n  const [input, setInput] = useState('');\n  const chatEndRef = useRef(null);\n  const sendMessage = () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      text: input,\n      sender: 'user',\n      time: new Date().toLocaleTimeString()\n    };\n    addMessage(chatroomId, newMessage);\n    setInput('');\n    toast.success('Message sent!');\n    setTimeout(() => {\n      addMessage(chatroomId, {\n        text: 'This is a simulated AI reply.',\n        sender: 'ai',\n        time: new Date().toLocaleTimeString()\n      });\n      toast.info('Gemini replied!');\n    }, 1200);\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      addMessage(chatroomId, {\n        text: reader.result,\n        sender: 'user',\n        isImage: true,\n        time: new Date().toLocaleTimeString()\n      });\n      toast.success('Image sent!');\n    };\n    reader.readAsDataURL(file);\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n    toast.success('Copied to clipboard!');\n  };\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages[chatroomId]]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-2xl mx-auto bg-white/10 backdrop-blur-lg rounded-2xl shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      className: \"mb-4 bg-gray-500 text-white px-4 py-2 rounded hover:scale-105 transition\",\n      children: \"\\u2B05\\uFE0F Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-gray-600 h-96 overflow-y-auto p-3 rounded-lg bg-black/20 space-y-3 mb-4\",\n      children: [(_messages$chatroomId = messages[chatroomId]) === null || _messages$chatroomId === void 0 ? void 0 : _messages$chatroomId.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 rounded-xl shadow-md transition-all duration-300 cursor-pointer hover:scale-[1.01] ${msg.sender === 'user' ? 'bg-blue-500 text-white self-end' : 'bg-green-500 text-white'}`,\n        onClick: () => !msg.isImage && copyToClipboard(msg.text),\n        children: [msg.isImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.text,\n          alt: \"Uploaded\",\n          className: \"max-w-xs rounded-xl hover:scale-105 transition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs mt-1 text-right\",\n          children: msg.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm italic animate-pulse text-gray-300 mt-2\",\n        children: \"Gemini is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"border border-gray-600 p-3 rounded-xl flex-1 bg-transparent text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        className: \"block text-sm text-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded hover:scale-105 transition\",\n        children: \"\\uD83D\\uDCE4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"g3ho9ZoeGdC5q0kKnfKyrriuAqY=\", false, function () {\n  return [useChatStore];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useChatStore","toast","jsxDEV","_jsxDEV","ChatRoom","chatroomId","onBack","_s","_messages$chatroomId","messages","addMessage","input","setInput","chatEndRef","sendMessage","trim","newMessage","text","sender","time","Date","toLocaleTimeString","success","setTimeout","info","handleImageUpload","e","file","target","files","reader","FileReader","onload","result","isImage","readAsDataURL","copyToClipboard","navigator","clipboard","writeText","_chatEndRef$current","current","scrollIntoView","behavior","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","src","alt","ref","type","value","onChange","placeholder","accept","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/gemini-clone/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useChatStore } from '../store/useChatStore';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ChatRoom = ({ chatroomId, onBack }) => {\r\n  const { messages, addMessage } = useChatStore();\r\n  const [input, setInput] = useState('');\r\n  const chatEndRef = useRef(null);\r\n\r\n  const sendMessage = () => {\r\n    if (!input.trim()) return;\r\n    const newMessage = { text: input, sender: 'user', time: new Date().toLocaleTimeString() };\r\n    addMessage(chatroomId, newMessage);\r\n    setInput('');\r\n    toast.success('Message sent!');\r\n\r\n    setTimeout(() => {\r\n      addMessage(chatroomId, {\r\n        text: 'This is a simulated AI reply.',\r\n        sender: 'ai',\r\n        time: new Date().toLocaleTimeString()\r\n      });\r\n      toast.info('Gemini replied!');\r\n    }, 1200);\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      addMessage(chatroomId, { text: reader.result, sender: 'user', isImage: true, time: new Date().toLocaleTimeString() });\r\n      toast.success('Image sent!');\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const copyToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n    toast.success('Copied to clipboard!');\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages[chatroomId]]);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto bg-white/10 backdrop-blur-lg rounded-2xl shadow-xl\">\r\n      <button onClick={onBack} className=\"mb-4 bg-gray-500 text-white px-4 py-2 rounded hover:scale-105 transition\">⬅️ Back</button>\r\n\r\n      <div className=\"border border-gray-600 h-96 overflow-y-auto p-3 rounded-lg bg-black/20 space-y-3 mb-4\">\r\n        {messages[chatroomId]?.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`p-3 rounded-xl shadow-md transition-all duration-300 cursor-pointer hover:scale-[1.01] ${\r\n              msg.sender === 'user' ? 'bg-blue-500 text-white self-end' : 'bg-green-500 text-white'\r\n            }`}\r\n            onClick={() => !msg.isImage && copyToClipboard(msg.text)}\r\n          >\r\n            {msg.isImage ? (\r\n              <img src={msg.text} alt=\"Uploaded\" className=\"max-w-xs rounded-xl hover:scale-105 transition\" />\r\n            ) : (\r\n              <span>{msg.text}</span>\r\n            )}\r\n            <div className=\"text-xs mt-1 text-right\">{msg.time}</div>\r\n          </div>\r\n        ))}\r\n        <div className=\"text-sm italic animate-pulse text-gray-300 mt-2\">Gemini is typing...</div>\r\n        <div ref={chatEndRef}></div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-2\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          className=\"border border-gray-600 p-3 rounded-xl flex-1 bg-transparent text-white\"\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} className=\"block text-sm text-gray-300\" />\r\n        <button onClick={sendMessage} className=\"bg-blue-600 text-white px-4 py-2 rounded hover:scale-105 transition\">\r\n          📤\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}